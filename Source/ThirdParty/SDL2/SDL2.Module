set(SDL_VERSION 2.0.16)

file(GLOB_RECURSE SDL_HEADERS ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/include/*.h*)
set(THIRD_PARTY_HEADERS ${THIRD_PARTY_HEADERS} ${SDL_HEADERS})

if(WIN32)

set(SDL_DEBUG_LIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/lib/Windows/x64/SDL2.lib)
set(SDL_RELEASE_LIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/lib/Windows/x64/SDL2.lib)

set(SDL_DEBUG_DYLIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/bin/Windows/x64/SDL2.dll)
set(SDL_RELEASE_DYLIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/bin/Windows/x64/SDL2.dll)

set(THIRD_PARTY_INCLUDE_PATH ${THIRD_PARTY_INCLUDE_PATH} ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/include/)

elseif (APPLE) 

set(SDL_DEBUG_LIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/lib/macOS/Universal/SDL2.framework)
set(SDL_RELEASE_LIB ${CMAKE_CURRENT_LIST_DIR}/SDL2-${SDL_VERSION}/lib/macOS/Universal/SDL2.framework)

endif()

set(THIRD_PARTY_DEBUG_LIBS ${THIRD_PARTY_DEBUG_LIBS} ${SDL_DEBUG_LIB})
set(THIRD_PARTY_RELEASE_LIBS ${THIRD_PARTY_RELEASE_LIBS} ${SDL_RELEASE_LIB})

set(THIRD_PARTY_DEBUG_DYLIBS ${THIRD_PARTY_DEBUG_DYLIBS} ${SDL_DEBUG_DYLIB})
set(THIRD_PARTY_RELEASE_DYLIBS ${THIRD_PARTY_RELEASE_DYLIBS} ${SDL_RELEASE_DYLIB})


message(STATUS "Included SDL2 module version ${SDL_VERSION}.")